---
import '../styles/global.css'

import Layout from '../layouts/Layout.astro'

import MiniAppHeader from '../components/miniapp/Header.vue'
import MiniAppFooter from '../components/miniapp/Footer.vue'
import WebAppHeader from '../components/webapp/Header.vue'
import WebAppFooter from '../components/webapp/Footer.vue'

import MiniAppApps from '../components/miniapp/Apps.vue'
import WebAppApps from '../components/webapp/Apps.vue'

export const prerender = false

/* Initialize constants. */
const hostname = Astro.url?.hostname

/* Initialize globals. */
let isMiniApp = true//false

/* Validate Mini App. */
if (hostname === 'app.miniapps.party') {
	isMiniApp = true
}
---

<Layout>
	<!-- Begin Mini App Main -->
	{isMiniApp && <div class="flex flex-col h-screen justify-between bg-slate-900">
		<MiniAppHeader client:load />

		<MiniAppApps client:load />

		<MiniAppFooter />
	</div>}
	<!-- End Mini App Main -->

	<!-- Begin Web App Main -->
	{!isMiniApp && <WebAppHeader client:load />

	<WebAppApps client:load />

	<WebAppFooter />}
</Layout>

<script>
/* Import modules. */
import { sdk } from '@farcaster/frame-sdk'

/* Initialize globals. */
let isWebApp
let isMiniApp

/* Request Mini App flag. */
isMiniApp = await sdk.isInMiniApp()
console.log('IS MINIAPP FLAG (apps)', isMiniApp)

// TODO Maybe we set a cookie to be used for the session.

/* Load app. */
sdk.actions.ready()

console.log('ASTRO URL (apps)', Astro.url)
</script>
